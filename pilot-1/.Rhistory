library(interactions)
library(afex)
library(tidyverse)
library(dplyr)
library(readxl)
library(ggplot2)
library(lme4)
library(lmerTest)
library(readr)
library(maditr)
library(patchwork)
library(janitor)
library(openxlsx)
library(Routliers)
library(lsmeans)
library(Hmisc)
library(car)
library(bootnet)
library(qgraph)
library(networktools)
library(MPsychoR)
library(eigenmodel)
library(rmcorr)
library(glasso)
library(ppcor)
library(NetworkComparisonTest)
options(scipen = 999) # Remove scientific notation
`%notin%` <- Negate(`%in%`) # Define %notin% function
xlsx_files <- list.files(path='/Users/jelkastojanov/jrp-polarisation-project/pilot-1/data', pattern=".xlsx", full.names=TRUE)
xlsx_files
# Names of the dataframes the way you want them here
names_xlsx <- sub('.*\\/', '', xlsx_files)
names_xlsx
names_xlsx <- substr(names_xlsx, 1, nchar(names_xlsx)-5)
names_xlsx
# List with all csv files
all_xlsx <- lapply(xlsx_files, read)
# List all files
all_xlsx <- lapply(xlsx_files, read)
# Save each list into a separate R object
list2env(xlsx_files, envir=.GlobalEnv)
xlsx_files <- list.files(path='/Users/jelkastojanov/jrp-polarisation-project/pilot-1/data', pattern="*.xlsx", full.names=TRUE)
# Names of the dataframes the way you want them here
names_xlsx <- sub('.*\\/', '', xlsx_files)
names_xlsx <- substr(names_xlsx, 1, nchar(names_xlsx) - 5)
# List all files
all_xlsx <- lapply(xlsx_files, read)
# List all files
all_xlsx <- lapply(xlsx_files, read_excel)
all_xlsx
names(all_xlsx) <- names_xlsx
# Save each list into a separate R object
list2env(all_xlsx, envir=.GlobalEnv)
View(`pilot-1-task-self-con-lib`)
# Rename dataframes
additionalGoals <- `pilot-1-additional-goals`
consent <- `pilot-1-consent`
demographics <- `pilot-1-demographics`
experimentDetails <- `pilot-1-experiment-details`
politicalIdeology <- `pilot-1-political-ideology`
politicalParty <- `pilot-1-political-party`
taskConLibSelf <- `pilot-1-task-con-lib-self`
taskConSelfLib <- `pilot-1-task-con-self-lib`
taskLibConSelf <- `pilot-1-task-lib-con-self`
taskLibSelfCon <- `pilot-1-task-lib-self-con`
taskSelfConLib <- `pilot-1-task-self-con-lib`
taskSelfLibCon <- `pilot-1-task-self-lib-con`
technicalDifficulties <- `pilot-1-technical-difficulties`
View(demographics)
View(politicalParty)
taskCombined <- bind_rows(taskConLibSelf, taskConSelfLib, taskLibConSelf, taskLibSelfCon, taskSelfConLib, taskSelfLibCon)
View(taskCombined)
colnames(taskCombined)
taskCombined <- taskCombined[, c('participantID', 'taskRandomiser', 'Trial Number', 'Screen Name', 'Zone Name', 'Zone Type', 'Reaction Time', 'Response', 'display', 'sliderText')]
colnames(taskCombined)
taskCombined <- taskCombined %>%
dplyr::filter(display != 'instructions')
names(taskCombined)[3] <- 'trialNumber'
names(taskCombined)[4] <- 'screenName'
names(taskCombined)[5] <- 'zoneName'
names(taskCombined)[6] <- 'zoneType'
names(taskCombined)[7] <- 'reactionTime'
names(taskCombined)[8] <- 'response'
taskCombined <- taskCombined %>%
dplyr::filter(display != 'instructions' & zoneType == 'response_slider_endValue')
# Clean task
taskCombined <- bind_rows(taskConLibSelf, taskConSelfLib, taskLibConSelf, taskLibSelfCon, taskSelfConLib, taskSelfLibCon)
taskCombined <- taskCombined[, c('participantID', 'taskRandomiser', 'Trial Number', 'Zone Name', 'Zone Type', 'Reaction Time', 'Response', 'display', 'sliderText')]
names(taskCombined)[3] <- 'trialNumber'
names(taskCombined)[4] <- 'zoneName'
names(taskCombined)[5] <- 'zoneType'
names(taskCombined)[6] <- 'reactionTime'
names(taskCombined)[7] <- 'response'
taskCombined <- taskCombined %>%
dplyr::filter(display != 'instructions' & zoneType == 'response_slider_endValue')
taskFinal <- dcast(taskCombined,
participantID + taskRandomiser + trialNumber + sliderText ~ zoneName,
value.vars = c('reactionTime', 'response'))
taskFinal <- dcast(taskCombined,
participantID + taskRandomiser + trialNumber + sliderText ~ zoneName,
value.var = c('reactionTime', 'response'))
View(taskFinal)
taskFinal <- taskCombined[, c('participantID', 'taskRandomiser', 'trialNumber', 'zoneName', 'reactionTime', 'response', 'sliderText')]
names(taskFinal)[4] <- 'perspective'
names(taskFinal)[7] <- 'policyGoal'
# Clean political ideology
View(politicalIdeology)
# Clean political ideology
politicalIdeologyFinal <- politicalIdeology %>%
dplyr::filter(politicalIdeology$`Zone Type` == 'response_slider_endValue')
View(politicalIdeologyFinal)
politicalIdeologyFinal <- politicalIdeologyFinal[, c('participantID', 'Zone Name', 'Response')]
politicalIdeologyFinal <- dcast(politicalIdeologyFinal,
participantID ~ `Zone Name`,
value.var = 'Response')
additionalGoals
xlsx_files <- list.files(path='/Users/jelkastojanov/jrp-polarisation-project/pilot-1/data', pattern="*.xlsx", full.names=TRUE)
# Specify names of the dataframes
names_xlsx <- sub('.*\\/', '', xlsx_files)
names_xlsx <- substr(names_xlsx, 1, nchar(names_xlsx) - 5)
# List all files
all_xlsx <- lapply(xlsx_files, read_excel)
# Name all files
names(all_xlsx) <- names_xlsx
# Save each element in the list into a separate R object
list2env(all_xlsx, envir=.GlobalEnv)
# Rename dataframes
additionalGoals <- `pilot-1-additional-goals`
additionalGoals
xlsx_files <- list.files(path='/Users/jelkastojanov/jrp-polarisation-project/pilot-1/data', pattern="*.xlsx", full.names=TRUE)
# Specify names of the dataframes
names_xlsx <- sub('.*\\/', '', xlsx_files)
names_xlsx <- substr(names_xlsx, 1, nchar(names_xlsx) - 5)
# List all files
all_xlsx <- lapply(xlsx_files, read_excel)
# Name all files
names(all_xlsx) <- names_xlsx
# Save each element in the list into a separate R object
list2env(all_xlsx, envir=.GlobalEnv)
# Rename dataframes
additionalGoals <- `pilot-1-additional-goals`
additionalGoals
consent
demographics
experimentDetails
politicalParty
technicalDifficulties
xlsx_files <- list.files(path='/Users/jelkastojanov/jrp-polarisation-project/pilot-1/data', pattern="*.xlsx", full.names=TRUE)
# Specify names of the dataframes
names_xlsx <- sub('.*\\/', '', xlsx_files)
names_xlsx <- substr(names_xlsx, 1, nchar(names_xlsx) - 5)
# List all files
all_xlsx <- lapply(xlsx_files, read_excel)
# Name all files
names(all_xlsx) <- names_xlsx
# Save each element in the list into a separate R object
list2env(all_xlsx, envir=.GlobalEnv)
technicalDifficulties <- `pilot-1-technical-difficulties`
technicalDifficulties
# Combine datasets
pilot1Data <- left_join(demographics, taskFinal, by = c('participantID', 'taskRandomiser'))
pilot1Data <- left_join(pilot1Data, additionalGoals, by = "participantID")
pilot1Data <- left_join(pilot1Data, politicalParty, by = "participantID")
pilot1Data <- left_join(pilot1Data, technicalDifficulties, by = "participantID")
View(pilot1Data)
pilot1Data <- left_join(pilot1Data, politicalIdeologyFinal, by = "participantID")
View(pilot1Data)
pilot1Data <- left_join(demographics, taskFinal, by = c('participantID', 'taskRandomiser'))
pilot1Data <- left_join(pilot1Data, additionalGoals, by = "participantID")
pilot1Data <- left_join(pilot1Data, politicalParty, by = "participantID")
pilot1Data <- left_join(pilot1Data, politicalIdeologyFinal, by = "participantID")
pilot1Data <- left_join(pilot1Data, technicalDifficulties, by = "participantID")
# Export data
write.csv(pilot1Data, 'pilot1Data.csv')
save.image("~/jrp-polarisation-project/pilot-1/pilot-1-R-data.RData")
